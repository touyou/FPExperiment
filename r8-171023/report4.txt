171023 藤井陽介

【実行例】
# 1 = true;;
Error = Invalid Type
# 1 + 2;;
- = VInt(3)
# 1 + true;;
Error = Invalid Type
# true = true;;
Error = Invalid Type
# 1 = 3;;
- = VBool(false)
# if 1 then 25 else 33;;
Error = Invalid Type
# if 1 = 1 then true else 3;;
Error = Invalid Type
#  let x = 6 in if x then 2 else 3;;
Error = Invalid Type
# let x = 6 in if x = 6 then 2 else 3;;
- = VInt(2)
# let f = 17;;
f = VInt(17)
# f && true;;
Error = Invalid Type
# let rec g x = if x=1 then 12 else g true in g 10;;
Error = Invalid Type
# let rec f x = if x=0 then 112 else f (x-1) in f 100;;
- = VInt(112)

【コード】
let rec subst_con s c =
  match c with
  | [] -> []
  | (t1, t2) :: cr -> (ty_subst s t1, ty_subst s t2) :: subst_con s cr
;;

(* ty_unify : constraints -> subst *)
let rec unify c=
  match c with
  | [] -> []
  | (t1, t2) :: cr ->
      if t1 = t2 then
        unify cr
      else
        match t1, t2 with
        | (TyFun (s1, r1), TyFun (s2, r2)) -> unify ((s1, s2)::(r1,r2)::cr)
        | (TyVar x, t) -> if (ty_subst ((x, t)::[]) t) = t then (x, t) :: (unify (subst_con ((x, t)::[]) cr)) else raise TyError
        | (t, TyVar x) -> if (ty_subst ((x, t)::[]) t) = t then (x, t) :: (unify (subst_con ((x, t)::[]) cr)) else raise TyError
        | (_, _) -> raise TyError
;;

【考察】
コードはmyocamlファイル内にあります。
α=tのときtにαが入ってないことを確認するために代入を使って比較することで確認しました。また途中で型変数に代入するようにsubst_conをつくり、あらたな制約としました。その他はスライドの定義に従いました。
