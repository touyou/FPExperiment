judge(P, [P,P,P,_,_,_,_,_,_]).
judge(P, [_,_,_,P,P,P,_,_,_]).
judge(P, [_,_,_,_,_,_,P,P,P]).
judge(P, [P,_,_,P,_,_,P,_,_]).
judge(P, [_,P,_,_,P,_,_,P,_]).
judge(P, [_,_,P,_,_,P,_,_,P]).
judge(P, [P,_,_,_,P,_,_,_,P]).
judge(P, [_,_,P,_,P,_,P,_,_]).

notjudge(P, B) :- judge(P, B), !, false.
notjudge(_, [_,_,_,_,_,_,_,_,_]).

next(P, [e,_,_,_,_,_,_,_,_], [P,_,_,_,_,_,_,_,_]).
next(P, [_,e,_,_,_,_,_,_,_], [_,P,_,_,_,_,_,_,_]).
next(P, [_,_,e,_,_,_,_,_,_], [_,_,P,_,_,_,_,_,_]).
next(P, [_,_,_,e,_,_,_,_,_], [_,_,_,P,_,_,_,_,_]).
next(P, [_,_,_,_,e,_,_,_,_], [_,_,_,_,P,_,_,_,_]).
next(P, [_,_,_,_,_,e,_,_,_], [_,_,_,_,_,P,_,_,_]).
next(P, [_,_,_,_,_,_,e,_,_], [_,_,_,_,_,_,P,_,_]).
next(P, [_,_,_,_,_,_,_,e,_], [_,_,_,_,_,_,_,P,_]).
next(P, [_,_,_,_,_,_,_,_,e], [_,_,_,_,_,_,_,_,P]).

neq(P, Q) :- P is Q, !, false.
neq(_, _).

win(P, B) :- judge(P, B).
win(P, B) :- notjudge(Q, B), next(P, B, C), lose(Q, C).

lose(P, B) :- neq(P, Q), judge(Q, B).
lose(P, B) :- next(Q, B, C), win(Q, C).