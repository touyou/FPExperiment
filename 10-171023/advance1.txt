171023 藤井陽介

チューリング完全であることの証明としてBrainf*ck処理系と等価な処理系をPrologで実現できることを証明する。
このためにメモリの状態を[s(z), s(s(s(z))), s(z), s(s(z))]のようなリストであらわす。

Brainf*ck処理系は
①「>」：ポインタを1加算
②「<」：ポインタを1減算
③「+」：ポインタの指す値を1加算
④「-」：ポインタの指す値を1減算
⑤「,」：値を1つ入力し、ポインタの指す値に代入
⑥「.」：ポインタの指す値を出力
⑦「[」：ポインタの指す値が0でなければかっこ内に入り、0ならば対応する「]」へ飛ぶ
⑧「]」：ポインタの指す値が0でなければ対応する「[」に戻り、0ならばかっこから脱出する
の８命令で構成されているためこれらをPrologの述語であらわせればよい。

①と②はリストのコンスを利用した述語でどちらもあらわせる。
③と④はplus([A|B], [s(A)|B]).のようなことをすれば実現できる。
⑤と⑥はProlog処理系で述語の項を指定したり変数として出力してもらうことに対応する。
そして⑦と⑧は再帰的にまわされるような述語の定義に一致する。

よってProlog処理系はBrainf*ck処理系と等価な処理系であることができ、すなわちチューリング完全である。//